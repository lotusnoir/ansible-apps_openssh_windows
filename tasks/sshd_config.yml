---
- name: Set the sshd_config Port value
  community.windows.win_lineinfile:
    path: '{{ openssh_windows_install_path }}\sshd_config_default'
    line: Port {{ openssh_windows_port }}
    regexp: '^#?Port\s+'
    state: present
  ignore_errors: '{{ ansible_check_mode }}'

- name: Set the sshd_config PubkeyAuthentication value
  community.windows.win_lineinfile:
    path: '{{ openssh_windows_install_path }}\sshd_config_default'
    line: PubkeyAuthentication {{ openssh_windows_pubkey_auth | ternary('yes', 'no') }}
    regexp: '^#?PubkeyAuthentication\s+'
    state: present
  ignore_errors: '{{ ansible_check_mode }}'

- name: Set the sshd_config PasswordAuthentication value
  community.windows.win_lineinfile:
    path: '{{ openssh_windows_install_path }}\sshd_config_default'
    line: PasswordAuthentication {{ openssh_windows_password_auth | ternary('yes', 'no') }}
    regexp: '^#?PasswordAuthentication\s+'
    state: present
  ignore_errors: '{{ ansible_check_mode }}'

- name: Set powershell subsystem
  community.windows.win_lineinfile:
    path: '{{ openssh_windows_install_path }}\sshd_config_default'
    line: "Subsystem  powershell  {{ openssh_windows_powershell_subsystem }} -sshs -NoLogo -NoProfile"
    state: present
    insertafter: "^# override default of no subsystems"
  when: openssh_windows_powershell_subsystem is defined
  ignore_errors: '{{ ansible_check_mode }}'

- name: Det the localised name for the Administrators group
  ansible.windows.win_shell: |
    $bslash = [char]0x5C
    $sid = New-Object -TypeName System.Security.Principal.SecurityIdentifier -ArgumentList "S-1-5-32-544"
    ($sid.Translate([System.Security.Principal.NTAccount]).Value -split "$bslash$bslash")[1]
  check_mode: false
  register: pri_openssh_admin_name_raw
  changed_when: false

- name: Process admin name from raw win_shell output
  ansible.builtin.set_fact:
    pri_openssh_admin_name: '{{ pri_openssh_admin_name_raw.stdout | trim }}'

- name: Set the admin_authorized_keys setting
  win_sshd_config:
    path: '{{ openssh_windows_install_path }}\sshd_config_default'
    match_name: Group {{ pri_openssh_admin_name }}
    name: AuthorizedKeysFile
    value: '{{ (openssh_windows_shared_admin_key | bool) | ternary("__PROGRAMDATA__/ssh/administrators_authorized_keys", omit) }}'
  ignore_errors: '{{ ansible_check_mode }}'

- name: Check if the server config directory already exists
  ansible.windows.win_stat:
    path: C:\ProgramData\ssh
  register: pri_openssh_config_dir

- name: Copy the template sshd_config_default file to the actual service location
  ansible.windows.win_copy:
    src: '{{ openssh_windows_install_path }}\sshd_config_default'
    dest: C:\ProgramData\ssh\sshd_config
    remote_src: true
  when: pri_openssh_config_dir.stat.exists
  notify:
    - Restart sshd service
